# NB: don't set `language: haskell` here

# The following enables several GHC versions to be tested; often it's enough to test only against the last release in a major GHC version. Feel free to omit lines listings versions you don't need/want testing for.
env:
 - CABALVER=1.16 GHCVER=7.6.1
 - CABALVER=1.16 GHCVER=7.6.2
 - CABALVER=1.18 GHCVER=7.6.3
 - CABALVER=1.18 GHCVER=7.8.1  # see note about Alex/Happy for GHC >= 7.8
 - CABALVER=1.18 GHCVER=7.8.2
 - CABALVER=1.18 GHCVER=7.8.3
 - CABALVER=1.18 GHCVER=7.8.4
 - CABALVER=1.22 GHCVER=7.10.1
 - CABALVER=1.22 GHCVER=7.10.2
 - CABALVER=head GHCVER=head   # see section about GHC HEAD snapshots

# Note: the distinction between `before_install` and `install` is not important.
before_install:
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER # see note about happy/alex
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - cabal install --only-dependencies --enable-tests --enable-benchmarks

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - cabal configure --enable-tests --enable-benchmarks -v2  # -v2 provides useful information for debugging
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - cabal test
 - cabal check
 - cabal sdist   # tests that a source-distribution can be generated

# Check that the resulting source distribution can be built & installed.
# If there are no other `.tar.gz` files in `dist`, this can be even simpler:
# `cabal install --force-reinstalls dist/*-*.tar.gz`
 - SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
   (cd dist && cabal install --force-reinstalls "$SRC_TGZ")
deploy:
  provider: hackage
  username: khanage
  password:
    secure: d9C8vtqu7m7UXqzQFUqugln3sa93PlZ0pDCT6uw4lVoDqLUfanRTjFrAyz6Bm2/E0tgagye9AaXXRYwIrZxmRq0Ft8z+X/oI0PL/9hPxt9oNCowJj1kP77AqFN05FL/6niq8ImJ6w+2ILOk3Us9cHALeKY9SzVwf4s/LA+/PP/Fs2OKMYY1eQZulUh1WiD9uWyw0k3oj8VGdFb/kaa/h6Dm3brY7V1MYO3R6iEvGqfXNHKkbym9oMgLeKqP4YAYENgnUtZyt2zsaI8+nQ4uGJN5ijwcX2DQbOtDDkXnSEPM3kietxLwbQwl2t4T2rtcZ+tKi49xDF5VjBd1j+ixLpTGoTOGK7SQOR2ONVm16Vs3exAKw6ToI0K15MZfaOagufmhxKwhEzACsg0DRFZ12B/hHND0jtllR6IJeCJIaNA9bgcZeADd5MdcyZYLIz7T2OmTKK/gmv647uk3AJfpGY4rIPP9BjIjArY8V/gbs+ICZR/78xXhXF+U+kq93whWYUbr06mxLOz5cbHvNZOOrK7eMK1hoH5Re+/23WHVlOWj+ecwFIOwOALmem2Kq2eue8LYob4GEIm0n+GQ04q2IhRh1ae+Nt8cbrxV6Ofi70ps0BdzCeHPPXWRWBU2Jj40bo1zYw2rUr3Ao8ZQfyj9t5DkVyIcx027OlB1n8iaAevw=
  on:
    all_branches: true
    repo: khanage/heineken
    tags: true
